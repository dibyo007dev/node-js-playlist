/*

// normal function statement

function sayhi() {
  console.log('hi');
}


sayhi();













// function expression

var sayBye = function(){
  console.log('bye');
};

setTimeout(function(){
  sayBye();
},5000);

*/

/*
//  export and module from count

      var stuff = require('./count');

      console.log(stuff.counter(['dibyo','asif','dawn','asif']));
      console.log(stuff.adder(1,2));
      console.log('value of Pi is : '+stuff.pi);

*/









// core modules

  var events = require('events');
  var util = require('util');

 var myEmitter = new events.EventEmitter();

 myEmitter.on('someEvent', function(mssg) {
    console.log(mssg);
 });

myEmitter.emit('someEvent','You have done it !! ');















// core module

 var events = require('events');
 var util = require('util');

 var person = function (name) {
   this.name = name;
 };

  util.inherits(person, events.EventEmitter);

  var james = new person('james');
  var dawn = new person('dawn');
  var ryu = new person('ryu');

  var people= [james, dawn, ryu];

  people.forEach(function(person) {
    person.on('speak', function(mssg){
      console.log(person.name + ' said : ' + mssg);
    });
  });

james.emit('speak', 'hello guys');




// core module - reading and writing - fs

  var fs = require('fs');

var readme = fs.readFileSync('readme.txt', 'utf8');

    //  its an synchronous method

fs.writeFileSync('writeme1.txt', readme);








// core module - reading and writing - fs

  var fs = require('fs');

   fs.readFile('readme.txt', 'utf8', function(err, data){
    fs.writeFile('writeme2.txt', data )
});

 console.log('test'); // testing the asynchronous behaviour

    //  its an Asynchronous method

 /// non blocking code ... it is much quicker when you have multiple codes ..












 // delete a file or directory or create it

   var fs = require('fs');

 // delete file   fs.unlink('writeme2.txt');

 // make folder   fs.mkdirSync('stuff');

 // delete directory fs.rmdirSync('stuff');

 // lets make a directory asynchronously .. remember we need a callback functin now

  fs.mkdir('stuff', function() {
     fs.readFile('readme.txt', 'utf8' , function(err, data){
       fs.writeFile('./stuff/wrte.txt', data);
     });
  });













  // creatng a server

  var http = require('http');

  var server = http.createServer(function(req, res){
     console.log('req was made : ' + req.url);
     res.writeHead(200,{'content': 'text/plain'});   // 200 status code
     res.end('hello guys');
  });

  server.listen(3000, '127.0.0.1');
  console.log('yo dwags , now listening to port 3000'); // port reffering app.js file


















// reading and writing stream

var http = require('http');
var fs = require('fs');

var myReadStream = fs.createReadStream(__dirname +'/readit.txt', 'utf8');
var myWriteStream = fs.createWriteStream(__dirname + '/writeme2.txt');

myReadStream.on('data',function(chunk){
  console.log('new chunk recieved :');
  myWriteStream.write(chunk);
});









// pipe

// creatng a server and piping the readme to response

var http = require('http');
var fs = require('fs');

var server = http.createServer(function(req, res){
   console.log('req was made : ' + req.url);
   var myReadStream = fs.createReadStream(__dirname +'/readit.txt', 'utf8');

      res.writeHead(200,{'content': 'text/plain'});    // 200 status code
   myReadStream.pipe(res);
});

server.listen(3000, '127.0.0.1');
console.log('yo dwags , now listening to port 3000'); // port reffering app.js file




















// creatng a server and piping the html to client

var http = require('http');
var fs = require('fs');

var server = http.createServer(function(req, res){
   console.log('req was made : ' + req.url);
   var myReadStream = fs.createReadStream(__dirname +'/index.html', 'utf8');

      res.writeHead(200,{'content': 'text/html'});    // 200 status code
   myReadStream.pipe(res);
});

server.listen(3000, '127.0.0.1');
console.log('yo dwags , now listening to port 3000'); // port reffering app.js file





















// creatng a server and reading an json file

var http = require('http');
var fs = require('fs');

var server = http.createServer(function(req, res){
   console.log('req was made : ' + req.url);

   res.writeHead(200,{'Content-Type': 'application/json'});    // 200 status code
   var myObj = {
     name: 'Dawn',
     job: 'Coder',
     age: 19
   };

   res.end(JSON.stringify(myObj) );
});

server.listen(3000, '127.0.0.1');
console.log('yo dwags , now listening to port 3000'); // port reffering app.js file























    // ROUTING SERVER

var http = require('http');
var fs = require('fs');

var server = http.createServer(function(req, res) {
  console.log('request was made: '+ req.url);

  if (req.url === '/home' || req.url === '/') {
      res.writeHead(200, {'Content-Type': 'text/html'});
      fs.createReadStream(__dirname + '/index.html').pipe(res);
  }

 else if (req.url === '/contact') {
   res.writeHead(200, {'Content-Type':'text/html'});
   fs.createReadStream(__dirname + '/contacts.html').pipe(res);
 }
 else if(req.url === '/api/dawn') {

   var ninjas = [{name: 'dawn', age: 19},{name:'yoshi', age: 32}];

   res.writeHead(200, {'Content-Type': 'application/json'});

   res.end(JSON.stringify(ninjas));

 }

 else{
   res.writeHead(404, {'Content-Type': 'text/html'});

   fs.createReadStream(__dirname + '/404.html').pipe(res);

 }
});

server.listen(3000, '127.0.0.1');
console.log('Hey fellas , now lstening to port 3000');











------------ will use express and nodemon

var express = require('express');

var app = express();

app.get('/', function(req, res){
  res.send('this is the homepage');
});

app.get('/contact', function(req, res){
  res.send('this is the contact page');
});

app.listen(3000);
console.log('Yo fellas, now listening to port 3000' );
























------ using routing params

var express = require('express');

var app = express();

app.get('/', function(req, res){
  res.send('this is the homepage');
});

app.get('/contact', function(req, res){
  res.send('this is the contact page');
});

app.get('/profile/:id', function(req, res){
    res.send('You have requested to a profile with an ID : ' + req.params.id);
});

app.listen(3000);
console.log('Yo fellas, now listening to port 3000' );
















------------ view engine -- EJS templating

var express = require('express');

var app = express();

app.set('view engine', 'ejs');

app.get('/', function(req, res){
  res.sendFile(__dirname + '/index.html');
});

app.get('/contact', function(req, res){
  res.sendFile(__dirname + '/contacts.html');
});

app.get('/profile/:name', function(req, res){
  var data = {age: 29, job: 'coder', hobbies: ['eating', 'fighting', 'coding']};
    res.render('profile', {person: req.params.name, data: data});
});

app.listen(3000);
console.log('Yo fellas, now listening to port 3000' );













--------- partial ejs

var express = require('express');

var app = express();

app.set('view engine', 'ejs');

app.get('/', function(req, res){
  res.render('index');
});

app.get('/contact', function(req, res){
  res.render('contacts');
});

app.get('/profile/:name', function(req, res){
  var data = {age: 29, job: 'coder', hobbies: ['eating', 'fighting', 'coding']};
    res.render('profile', {person: req.params.name, data: data});
});

app.listen(3000);
console.log('Yo fellas, now listening to port 3000' );


////////////////////    <% include partial/nav.ejs %>



when we add through <link href> any css file to the contact.ejs or any ejs files ... being static .. it will not work
with the dynamic server .. its request will not get counted ... network setting will show status 404: not find in case of that
css file... so yeah

so whats next ??

 ya we have inbuilt middleware for it

  what the fuck is it ??? Middleware ??

It is a peice of code .. which runs between req and response !
 we get it packed with npm express







////// using middleware .. as in express module

var express = require('express');

var app = express();

app.set('view engine', 'ejs');
app.use('/assets', express.static('assets')
);

app.get('/', function(req, res){
  res.render('index');
});

app.get('/contact', function(req, res){
  res.render('contacts');
});

app.get('/profile/:name', function(req, res){
  var data = {age: 29, job: 'coder', hobbies: ['eating', 'fighting', 'coding']};
    res.render('profile', {person: req.params.name, data: data});
});

app.listen(3000);
console.log('Yo fellas, now listening to port 3000' );


















--- query string ... in contact

var express = require('express');

var app = express();

app.set('view engine', 'ejs');
app.use('/assets', express.static('assets'));

app.get('/', function(req, res){
  res.render('index');
});

app.get('/contact', function(req, res){
  console.log(req.query);
  res.render('contacts', {qs: req.query});
});

app.get('/profile/:name', function(req, res){
  var data = {age: 29, job: 'coder', hobbies: ['eating', 'fighting', 'coding']};
    res.render('profile', {person: req.params.name, data: data});
});

app.listen(3000);
console.log('Yo fellas, now listening to port 3000' );


















=-- handling post request


var express = require('express');

var app = express();

var bodyParser = require('body-parser');

var urlencodedParser = bodyParser.urlencoded({ extended: false })

app.set('view engine', 'ejs');
app.use('/assets', express.static('assets'));

app.get('/', function(req, res){
  res.render('index');
});

app.get('/contact', function(req, res){
  console.log(req.query);
  res.render('contacts', {qs: req.query});
});

app.post('/contact', urlencodedParser, function(req, res){
  console.log(req.query);
  console.log(req.body);
  res.render('contact-success', {data: req.body});
});


app.get('/profile/:name', function(req, res){
  var data = {age: 29, job: 'coder', hobbies: ['eating', 'fighting', 'coding']};
    res.render('profile', {person: req.params.name, data: data});
});

app.listen(3000);
console.log('Yo fellas, now listening to port 3000' );
